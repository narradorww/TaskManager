name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: "Validate Code"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Install dependencies
        run: yarn install
        
      - name: Run linting
        run: yarn lint
        
      - name: Run type checking
        run: yarn type-check
        
      - name: Run unit tests
        run: yarn test --coverage

  build-android:
    name: "Build Verification (Android)"
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          
      - name: Setup Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Install dependencies
        run: yarn install
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Download release keystore from S3
        run: |
          aws s3 cp s3://rodrigo-apk-store/keystore/release.keystore android/app/release.keystore

      - name: Create .env.local for Android signing
        run: |
          cat <<EOF > android/.env.local
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}
          EOF
          
      - name: Build APK for Android (Release)
        run: |
          cd android
          ./gradlew assembleRelease
          
      - name: Verify APK was built
        run: |
          ls -la android/app/build/outputs/apk/release/
          
      - name: Upload APK to S3
        run: |
          aws s3 cp \
            android/app/build/outputs/apk/release/app-release.apk \
            s3://rodrigo-apk-store/builds/taskmanager-v${{ github.run_number }}.apk

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskmanager-v${{ github.run_number }}.apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30