name: CI - Validation, Tests and Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: "Lint, Type Check and Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Lint and formatting
        run: yarn lint

      - name: Type check
        run: yarn type-check

      - name: Run unit tests
        run: yarn test --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  e2e-maestro:
    name: "E2E Tests (Maestro)"
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
          
      - name: Run Maestro E2E test
        run: maestro test maestro/test.yaml --format junit || true

      - name: Upload E2E report
        uses: actions/upload-artifact@v4
        with:
          name: maestro-e2e-report
          path: maestro/

  build-android:
    name: "Build Android Release APK"
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: yarn install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Download Android release keystore from S3
        run: aws s3 cp s3://rodrigo-apk-store/release-key.keystore android/app/release.keystore

      - name: Create .env.local for Android signing
        run: |
          cat <<EOF > android/.env.local
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}
          EOF

      - name: Ensure assets directory exists
        run: mkdir -p android/app/src/main/assets

      - name: Generate JS bundle for Release
        run: |
          yarn react-native bundle \
            --platform android \
            --dev false \
            --entry-file index.js \
            --bundle-output android/app/src/main/assets/index.android.bundle \
            --assets-dest android/app/src/main/res

      - name: Build APK (Release)
        run: |
          cd android
          ./gradlew assembleRelease

      - name: List APK output
        run: |
          ls -la android/app/build/outputs/apk/release/
          echo "APK size:"
          du -h android/app/build/outputs/apk/release/app-release.apk

      - name: Upload APK to S3
        run: |
          aws s3 cp \
            android/app/build/outputs/apk/release/app-release.apk \
            s3://rodrigo-apk-store/builds/taskmanager-v${{ github.run_number }}.apk
          echo "Uploaded: taskmanager-v${{ github.run_number }}.apk"

      - name: Upload APK as GitHub artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskmanager-v${{ github.run_number }}.apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30
