name: CI - Validation and Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: "Lint, Type Check and Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js v18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint and formatting
        run: npm run lint
      - name: Type check
        run: npm run type-check
      - name: Run unit tests
        run: npm test -- --coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  e2e-maestro:
    name: "E2E Tests (Maestro)"
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js v18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
      - name: Run Maestro E2E test
        run: maestro test maestro/test.yaml --format junit || true
      - name: Upload E2E report
        uses: actions/upload-artifact@v4
        with:
          name: maestro-e2e-report
          path: maestro/

  build-android:
    name: "Build and Deploy APK"
    needs: [validate, e2e-maestro]
    runs-on: ubuntu-latest
    # Só executa no push para main (não em PRs)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js v18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Setup Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install dependencies
        run: npm ci
      
      # Build APK de release em vez de debug
      - name: Build APK for Android (Release)
        run: |
          cd android
          ./gradlew assembleRelease
      
      # Verificar se APK foi criado
      - name: Verify APK was built
        run: |
          ls -la android/app/build/outputs/apk/release/
          echo "APK size: $(du -h android/app/build/outputs/apk/release/app-release.apk)"
      
      # Checkout do repositório de destino
      - name: Checkout target repository (seo-lp-ia)
        uses: actions/checkout@v4
        with:
          repository: narradorww/seo-lp-ia
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: target-repo
      
      # Copiar APK para o repositório de destino
      - name: Copy APK to target repository
        run: |
          mkdir -p target-repo/public/builds
          cp android/app/build/outputs/apk/release/app-release.apk \
             target-repo/public/builds/taskmanager-v${{ github.run_number }}.apk
          echo "APK copied as: taskmanager-v${{ github.run_number }}.apk"
      
      # Commit e push no repositório de destino
      - name: Commit and push APK to target repository
        run: |
          cd target-repo
          git config user.name "TaskManager Build Bot"
          git config user.email "taskmanager-bot@noreply.github.com"
          git add public/builds/taskmanager-v${{ github.run_number }}.apk
          git commit -m "feat: add TaskManager APK v${{ github.run_number }}
          
          🤖 Auto-deployed from TaskManager build #${{ github.run_number }}
          
          - Repository: narradorww/TaskManager
          - Commit: ${{ github.sha }}
          - Build: #${{ github.run_number }}
          
          Co-Authored-By: TaskManager CI <taskmanager-ci@noreply.github.com>"
          git push origin main
      
      # Upload como artifact para backup
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskmanager-v${{ github.run_number }}.apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 30